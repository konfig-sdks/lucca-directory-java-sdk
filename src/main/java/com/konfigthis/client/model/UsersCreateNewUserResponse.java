/*
 * Directory-v3
 * Welcome on the documentation for the Directory v3 API. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: developers@lucca.fr
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ModelNull;
import com.konfigthis.client.model.UsersUpdateByIdRequestHabilitedRolesInner;
import com.konfigthis.client.model.UsersUpdateByIdRequestUserWorkCyclesInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * UsersCreateNewUserResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class UsersCreateNewUserResponse {
  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_MAIL = "mail";
  @SerializedName(SERIALIZED_NAME_MAIL)
  private String mail;

  public static final String SERIALIZED_NAME_LOGIN = "login";
  @SerializedName(SERIALIZED_NAME_LOGIN)
  private String login;

  public static final String SERIALIZED_NAME_LEGAL_ENTITY_ID = "legalEntityId";
  @SerializedName(SERIALIZED_NAME_LEGAL_ENTITY_ID)
  private Integer legalEntityId;

  public static final String SERIALIZED_NAME_DT_CONTRACT_START = "dtContractStart";
  @SerializedName(SERIALIZED_NAME_DT_CONTRACT_START)
  private String dtContractStart;

  public static final String SERIALIZED_NAME_DT_CONTRACT_END = "dtContractEnd";
  @SerializedName(SERIALIZED_NAME_DT_CONTRACT_END)
  private Object dtContractEnd = null;

  public static final String SERIALIZED_NAME_CSP_ID = "cspId";
  @SerializedName(SERIALIZED_NAME_CSP_ID)
  private Integer cspId;

  public static final String SERIALIZED_NAME_CALENDAR_ID = "calendarId";
  @SerializedName(SERIALIZED_NAME_CALENDAR_ID)
  private ModelNull calendarId = null;

  public static final String SERIALIZED_NAME_EMPLOYEE_NUMBER = "employeeNumber";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_NUMBER)
  private String employeeNumber;

  public static final String SERIALIZED_NAME_BIRTH_DATE = "birthDate";
  @SerializedName(SERIALIZED_NAME_BIRTH_DATE)
  private String birthDate;

  public static final String SERIALIZED_NAME_USER_WORK_CYCLES = "userWorkCycles";
  @SerializedName(SERIALIZED_NAME_USER_WORK_CYCLES)
  private List<UsersUpdateByIdRequestUserWorkCyclesInner> userWorkCycles = null;

  public static final String SERIALIZED_NAME_DEPARTMENT_ID = "departmentId";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_ID)
  private Integer departmentId;

  public static final String SERIALIZED_NAME_MANAGER_ID = "managerId";
  @SerializedName(SERIALIZED_NAME_MANAGER_ID)
  private Integer managerId;

  public static final String SERIALIZED_NAME_ROLE_PRINCIPAL_ID = "rolePrincipalId";
  @SerializedName(SERIALIZED_NAME_ROLE_PRINCIPAL_ID)
  private Integer rolePrincipalId;

  public static final String SERIALIZED_NAME_HABILITED_ROLES = "habilitedRoles";
  @SerializedName(SERIALIZED_NAME_HABILITED_ROLES)
  private List<UsersUpdateByIdRequestHabilitedRolesInner> habilitedRoles = null;

  public static final String SERIALIZED_NAME_CULTURE_ID = "cultureId";
  @SerializedName(SERIALIZED_NAME_CULTURE_ID)
  private Integer cultureId;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_BANK_NAME = "bankName";
  @SerializedName(SERIALIZED_NAME_BANK_NAME)
  private String bankName;

  public static final String SERIALIZED_NAME_DIRECT_LINE = "directLine";
  @SerializedName(SERIALIZED_NAME_DIRECT_LINE)
  private String directLine;

  public static final String SERIALIZED_NAME_JOB_TITLE = "jobTitle";
  @SerializedName(SERIALIZED_NAME_JOB_TITLE)
  private String jobTitle;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_NATIONALITY = "nationality";
  @SerializedName(SERIALIZED_NAME_NATIONALITY)
  private String nationality;

  public static final String SERIALIZED_NAME_PERSONAL_EMAIL = "personalEmail";
  @SerializedName(SERIALIZED_NAME_PERSONAL_EMAIL)
  private String personalEmail;

  public static final String SERIALIZED_NAME_PERSONAL_MOBILE = "personalMobile";
  @SerializedName(SERIALIZED_NAME_PERSONAL_MOBILE)
  private String personalMobile;

  public static final String SERIALIZED_NAME_PROFESSIONAL_MOBILE = "professionalMobile";
  @SerializedName(SERIALIZED_NAME_PROFESSIONAL_MOBILE)
  private String professionalMobile;

  public static final String SERIALIZED_NAME_QUOTE = "quote";
  @SerializedName(SERIALIZED_NAME_QUOTE)
  private String quote;

  public UsersCreateNewUserResponse() {
  }

  public UsersCreateNewUserResponse firstName(String firstName) {
    
    
    
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "John", required = true, value = "")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    
    
    
    this.firstName = firstName;
  }


  public UsersCreateNewUserResponse lastName(String lastName) {
    
    
    
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Doe", required = true, value = "")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    
    
    
    this.lastName = lastName;
  }


  public UsersCreateNewUserResponse mail(String mail) {
    
    
    
    
    this.mail = mail;
    return this;
  }

   /**
   * Get mail
   * @return mail
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "jdoe@corp.com", required = true, value = "")

  public String getMail() {
    return mail;
  }


  public void setMail(String mail) {
    
    
    
    this.mail = mail;
  }


  public UsersCreateNewUserResponse login(String login) {
    
    
    
    
    this.login = login;
    return this;
  }

   /**
   * Get login
   * @return login
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "jdoe", required = true, value = "")

  public String getLogin() {
    return login;
  }


  public void setLogin(String login) {
    
    
    
    this.login = login;
  }


  public UsersCreateNewUserResponse legalEntityId(Integer legalEntityId) {
    
    
    
    
    this.legalEntityId = legalEntityId;
    return this;
  }

   /**
   * Get legalEntityId
   * @return legalEntityId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1", required = true, value = "")

  public Integer getLegalEntityId() {
    return legalEntityId;
  }


  public void setLegalEntityId(Integer legalEntityId) {
    
    
    
    this.legalEntityId = legalEntityId;
  }


  public UsersCreateNewUserResponse dtContractStart(String dtContractStart) {
    
    
    
    
    this.dtContractStart = dtContractStart;
    return this;
  }

   /**
   * Get dtContractStart
   * @return dtContractStart
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getDtContractStart() {
    return dtContractStart;
  }


  public void setDtContractStart(String dtContractStart) {
    
    
    
    this.dtContractStart = dtContractStart;
  }


  public UsersCreateNewUserResponse dtContractEnd(Object dtContractEnd) {
    
    
    
    
    this.dtContractEnd = dtContractEnd;
    return this;
  }

   /**
   * Get dtContractEnd
   * @return dtContractEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getDtContractEnd() {
    return dtContractEnd;
  }


  public void setDtContractEnd(Object dtContractEnd) {
    
    
    
    this.dtContractEnd = dtContractEnd;
  }


  public UsersCreateNewUserResponse cspId(Integer cspId) {
    
    
    
    
    this.cspId = cspId;
    return this;
  }

   /**
   * Get cspId
   * @return cspId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "")

  public Integer getCspId() {
    return cspId;
  }


  public void setCspId(Integer cspId) {
    
    
    
    this.cspId = cspId;
  }


  public UsersCreateNewUserResponse calendarId(ModelNull calendarId) {
    
    
    
    
    this.calendarId = calendarId;
    return this;
  }

   /**
   * Get calendarId
   * @return calendarId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ModelNull getCalendarId() {
    return calendarId;
  }


  public void setCalendarId(ModelNull calendarId) {
    
    
    
    this.calendarId = calendarId;
  }


  public UsersCreateNewUserResponse employeeNumber(String employeeNumber) {
    
    
    
    
    this.employeeNumber = employeeNumber;
    return this;
  }

   /**
   * Get employeeNumber
   * @return employeeNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "000000452", value = "")

  public String getEmployeeNumber() {
    return employeeNumber;
  }


  public void setEmployeeNumber(String employeeNumber) {
    
    
    
    this.employeeNumber = employeeNumber;
  }


  public UsersCreateNewUserResponse birthDate(String birthDate) {
    
    
    
    
    this.birthDate = birthDate;
    return this;
  }

   /**
   * Get birthDate
   * @return birthDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1989-12-22T00:00:00", value = "")

  public String getBirthDate() {
    return birthDate;
  }


  public void setBirthDate(String birthDate) {
    
    
    
    this.birthDate = birthDate;
  }


  public UsersCreateNewUserResponse userWorkCycles(List<UsersUpdateByIdRequestUserWorkCyclesInner> userWorkCycles) {
    
    
    
    
    this.userWorkCycles = userWorkCycles;
    return this;
  }

  public UsersCreateNewUserResponse addUserWorkCyclesItem(UsersUpdateByIdRequestUserWorkCyclesInner userWorkCyclesItem) {
    if (this.userWorkCycles == null) {
      this.userWorkCycles = new ArrayList<>();
    }
    this.userWorkCycles.add(userWorkCyclesItem);
    return this;
  }

   /**
   * Get userWorkCycles
   * @return userWorkCycles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<UsersUpdateByIdRequestUserWorkCyclesInner> getUserWorkCycles() {
    return userWorkCycles;
  }


  public void setUserWorkCycles(List<UsersUpdateByIdRequestUserWorkCyclesInner> userWorkCycles) {
    
    
    
    this.userWorkCycles = userWorkCycles;
  }


  public UsersCreateNewUserResponse departmentId(Integer departmentId) {
    
    
    
    
    this.departmentId = departmentId;
    return this;
  }

   /**
   * Get departmentId
   * @return departmentId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "14", required = true, value = "")

  public Integer getDepartmentId() {
    return departmentId;
  }


  public void setDepartmentId(Integer departmentId) {
    
    
    
    this.departmentId = departmentId;
  }


  public UsersCreateNewUserResponse managerId(Integer managerId) {
    
    
    
    
    this.managerId = managerId;
    return this;
  }

   /**
   * Get managerId
   * @return managerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "455", value = "")

  public Integer getManagerId() {
    return managerId;
  }


  public void setManagerId(Integer managerId) {
    
    
    
    this.managerId = managerId;
  }


  public UsersCreateNewUserResponse rolePrincipalId(Integer rolePrincipalId) {
    
    
    
    
    this.rolePrincipalId = rolePrincipalId;
    return this;
  }

   /**
   * Get rolePrincipalId
   * @return rolePrincipalId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "55", required = true, value = "")

  public Integer getRolePrincipalId() {
    return rolePrincipalId;
  }


  public void setRolePrincipalId(Integer rolePrincipalId) {
    
    
    
    this.rolePrincipalId = rolePrincipalId;
  }


  public UsersCreateNewUserResponse habilitedRoles(List<UsersUpdateByIdRequestHabilitedRolesInner> habilitedRoles) {
    
    
    
    
    this.habilitedRoles = habilitedRoles;
    return this;
  }

  public UsersCreateNewUserResponse addHabilitedRolesItem(UsersUpdateByIdRequestHabilitedRolesInner habilitedRolesItem) {
    if (this.habilitedRoles == null) {
      this.habilitedRoles = new ArrayList<>();
    }
    this.habilitedRoles.add(habilitedRolesItem);
    return this;
  }

   /**
   * Get habilitedRoles
   * @return habilitedRoles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<UsersUpdateByIdRequestHabilitedRolesInner> getHabilitedRoles() {
    return habilitedRoles;
  }


  public void setHabilitedRoles(List<UsersUpdateByIdRequestHabilitedRolesInner> habilitedRoles) {
    
    
    
    this.habilitedRoles = habilitedRoles;
  }


  public UsersCreateNewUserResponse cultureId(Integer cultureId) {
    
    
    
    
    this.cultureId = cultureId;
    return this;
  }

   /**
   * Get cultureId
   * @return cultureId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1040", value = "")

  public Integer getCultureId() {
    return cultureId;
  }


  public void setCultureId(Integer cultureId) {
    
    
    
    this.cultureId = cultureId;
  }


  public UsersCreateNewUserResponse address(String address) {
    
    
    
    
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "13, rue Martin Bernard, 75 Paris", value = "")

  public String getAddress() {
    return address;
  }


  public void setAddress(String address) {
    
    
    
    this.address = address;
  }


  public UsersCreateNewUserResponse bankName(String bankName) {
    
    
    
    
    this.bankName = bankName;
    return this;
  }

   /**
   * Get bankName
   * @return bankName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "My Bank", value = "")

  public String getBankName() {
    return bankName;
  }


  public void setBankName(String bankName) {
    
    
    
    this.bankName = bankName;
  }


  public UsersCreateNewUserResponse directLine(String directLine) {
    
    
    
    
    this.directLine = directLine;
    return this;
  }

   /**
   * Get directLine
   * @return directLine
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0123456789", value = "")

  public String getDirectLine() {
    return directLine;
  }


  public void setDirectLine(String directLine) {
    
    
    
    this.directLine = directLine;
  }


  public UsersCreateNewUserResponse jobTitle(String jobTitle) {
    
    
    
    
    this.jobTitle = jobTitle;
    return this;
  }

   /**
   * Get jobTitle
   * @return jobTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Developer", value = "")

  public String getJobTitle() {
    return jobTitle;
  }


  public void setJobTitle(String jobTitle) {
    
    
    
    this.jobTitle = jobTitle;
  }


  public UsersCreateNewUserResponse gender(String gender) {
    
    
    
    
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Male", value = "")

  public String getGender() {
    return gender;
  }


  public void setGender(String gender) {
    
    
    
    this.gender = gender;
  }


  public UsersCreateNewUserResponse nationality(String nationality) {
    
    
    
    
    this.nationality = nationality;
    return this;
  }

   /**
   * Get nationality
   * @return nationality
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "French", value = "")

  public String getNationality() {
    return nationality;
  }


  public void setNationality(String nationality) {
    
    
    
    this.nationality = nationality;
  }


  public UsersCreateNewUserResponse personalEmail(String personalEmail) {
    
    
    
    
    this.personalEmail = personalEmail;
    return this;
  }

   /**
   * Get personalEmail
   * @return personalEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "email@test.fr", value = "")

  public String getPersonalEmail() {
    return personalEmail;
  }


  public void setPersonalEmail(String personalEmail) {
    
    
    
    this.personalEmail = personalEmail;
  }


  public UsersCreateNewUserResponse personalMobile(String personalMobile) {
    
    
    
    
    this.personalMobile = personalMobile;
    return this;
  }

   /**
   * Get personalMobile
   * @return personalMobile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0612345678", value = "")

  public String getPersonalMobile() {
    return personalMobile;
  }


  public void setPersonalMobile(String personalMobile) {
    
    
    
    this.personalMobile = personalMobile;
  }


  public UsersCreateNewUserResponse professionalMobile(String professionalMobile) {
    
    
    
    
    this.professionalMobile = professionalMobile;
    return this;
  }

   /**
   * Get professionalMobile
   * @return professionalMobile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0612345678", value = "")

  public String getProfessionalMobile() {
    return professionalMobile;
  }


  public void setProfessionalMobile(String professionalMobile) {
    
    
    
    this.professionalMobile = professionalMobile;
  }


  public UsersCreateNewUserResponse quote(String quote) {
    
    
    
    
    this.quote = quote;
    return this;
  }

   /**
   * Get quote
   * @return quote
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getQuote() {
    return quote;
  }


  public void setQuote(String quote) {
    
    
    
    this.quote = quote;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the UsersCreateNewUserResponse instance itself
   */
  public UsersCreateNewUserResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsersCreateNewUserResponse usersCreateNewUserResponse = (UsersCreateNewUserResponse) o;
    return Objects.equals(this.firstName, usersCreateNewUserResponse.firstName) &&
        Objects.equals(this.lastName, usersCreateNewUserResponse.lastName) &&
        Objects.equals(this.mail, usersCreateNewUserResponse.mail) &&
        Objects.equals(this.login, usersCreateNewUserResponse.login) &&
        Objects.equals(this.legalEntityId, usersCreateNewUserResponse.legalEntityId) &&
        Objects.equals(this.dtContractStart, usersCreateNewUserResponse.dtContractStart) &&
        Objects.equals(this.dtContractEnd, usersCreateNewUserResponse.dtContractEnd) &&
        Objects.equals(this.cspId, usersCreateNewUserResponse.cspId) &&
        Objects.equals(this.calendarId, usersCreateNewUserResponse.calendarId) &&
        Objects.equals(this.employeeNumber, usersCreateNewUserResponse.employeeNumber) &&
        Objects.equals(this.birthDate, usersCreateNewUserResponse.birthDate) &&
        Objects.equals(this.userWorkCycles, usersCreateNewUserResponse.userWorkCycles) &&
        Objects.equals(this.departmentId, usersCreateNewUserResponse.departmentId) &&
        Objects.equals(this.managerId, usersCreateNewUserResponse.managerId) &&
        Objects.equals(this.rolePrincipalId, usersCreateNewUserResponse.rolePrincipalId) &&
        Objects.equals(this.habilitedRoles, usersCreateNewUserResponse.habilitedRoles) &&
        Objects.equals(this.cultureId, usersCreateNewUserResponse.cultureId) &&
        Objects.equals(this.address, usersCreateNewUserResponse.address) &&
        Objects.equals(this.bankName, usersCreateNewUserResponse.bankName) &&
        Objects.equals(this.directLine, usersCreateNewUserResponse.directLine) &&
        Objects.equals(this.jobTitle, usersCreateNewUserResponse.jobTitle) &&
        Objects.equals(this.gender, usersCreateNewUserResponse.gender) &&
        Objects.equals(this.nationality, usersCreateNewUserResponse.nationality) &&
        Objects.equals(this.personalEmail, usersCreateNewUserResponse.personalEmail) &&
        Objects.equals(this.personalMobile, usersCreateNewUserResponse.personalMobile) &&
        Objects.equals(this.professionalMobile, usersCreateNewUserResponse.professionalMobile) &&
        Objects.equals(this.quote, usersCreateNewUserResponse.quote)&&
        Objects.equals(this.additionalProperties, usersCreateNewUserResponse.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(firstName, lastName, mail, login, legalEntityId, dtContractStart, dtContractEnd, cspId, calendarId, employeeNumber, birthDate, userWorkCycles, departmentId, managerId, rolePrincipalId, habilitedRoles, cultureId, address, bankName, directLine, jobTitle, gender, nationality, personalEmail, personalMobile, professionalMobile, quote, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsersCreateNewUserResponse {\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    mail: ").append(toIndentedString(mail)).append("\n");
    sb.append("    login: ").append(toIndentedString(login)).append("\n");
    sb.append("    legalEntityId: ").append(toIndentedString(legalEntityId)).append("\n");
    sb.append("    dtContractStart: ").append(toIndentedString(dtContractStart)).append("\n");
    sb.append("    dtContractEnd: ").append(toIndentedString(dtContractEnd)).append("\n");
    sb.append("    cspId: ").append(toIndentedString(cspId)).append("\n");
    sb.append("    calendarId: ").append(toIndentedString(calendarId)).append("\n");
    sb.append("    employeeNumber: ").append(toIndentedString(employeeNumber)).append("\n");
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    userWorkCycles: ").append(toIndentedString(userWorkCycles)).append("\n");
    sb.append("    departmentId: ").append(toIndentedString(departmentId)).append("\n");
    sb.append("    managerId: ").append(toIndentedString(managerId)).append("\n");
    sb.append("    rolePrincipalId: ").append(toIndentedString(rolePrincipalId)).append("\n");
    sb.append("    habilitedRoles: ").append(toIndentedString(habilitedRoles)).append("\n");
    sb.append("    cultureId: ").append(toIndentedString(cultureId)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    bankName: ").append(toIndentedString(bankName)).append("\n");
    sb.append("    directLine: ").append(toIndentedString(directLine)).append("\n");
    sb.append("    jobTitle: ").append(toIndentedString(jobTitle)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    sb.append("    personalEmail: ").append(toIndentedString(personalEmail)).append("\n");
    sb.append("    personalMobile: ").append(toIndentedString(personalMobile)).append("\n");
    sb.append("    professionalMobile: ").append(toIndentedString(professionalMobile)).append("\n");
    sb.append("    quote: ").append(toIndentedString(quote)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("firstName");
    openapiFields.add("lastName");
    openapiFields.add("mail");
    openapiFields.add("login");
    openapiFields.add("legalEntityId");
    openapiFields.add("dtContractStart");
    openapiFields.add("dtContractEnd");
    openapiFields.add("cspId");
    openapiFields.add("calendarId");
    openapiFields.add("employeeNumber");
    openapiFields.add("birthDate");
    openapiFields.add("userWorkCycles");
    openapiFields.add("departmentId");
    openapiFields.add("managerId");
    openapiFields.add("rolePrincipalId");
    openapiFields.add("habilitedRoles");
    openapiFields.add("cultureId");
    openapiFields.add("address");
    openapiFields.add("bankName");
    openapiFields.add("directLine");
    openapiFields.add("jobTitle");
    openapiFields.add("gender");
    openapiFields.add("nationality");
    openapiFields.add("personalEmail");
    openapiFields.add("personalMobile");
    openapiFields.add("professionalMobile");
    openapiFields.add("quote");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("firstName");
    openapiRequiredFields.add("lastName");
    openapiRequiredFields.add("mail");
    openapiRequiredFields.add("login");
    openapiRequiredFields.add("legalEntityId");
    openapiRequiredFields.add("dtContractStart");
    openapiRequiredFields.add("departmentId");
    openapiRequiredFields.add("rolePrincipalId");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to UsersCreateNewUserResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!UsersCreateNewUserResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UsersCreateNewUserResponse is not found in the empty JSON string", UsersCreateNewUserResponse.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UsersCreateNewUserResponse.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if (!jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if (!jsonObj.get("mail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mail").toString()));
      }
      if (!jsonObj.get("login").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `login` to be a primitive type in the JSON string but got `%s`", jsonObj.get("login").toString()));
      }
      if (!jsonObj.get("dtContractStart").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtContractStart` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtContractStart").toString()));
      }
      if ((jsonObj.get("employeeNumber") != null && !jsonObj.get("employeeNumber").isJsonNull()) && !jsonObj.get("employeeNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeNumber").toString()));
      }
      if ((jsonObj.get("birthDate") != null && !jsonObj.get("birthDate").isJsonNull()) && !jsonObj.get("birthDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `birthDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("birthDate").toString()));
      }
      if (jsonObj.get("userWorkCycles") != null && !jsonObj.get("userWorkCycles").isJsonNull()) {
        JsonArray jsonArrayuserWorkCycles = jsonObj.getAsJsonArray("userWorkCycles");
        if (jsonArrayuserWorkCycles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("userWorkCycles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `userWorkCycles` to be an array in the JSON string but got `%s`", jsonObj.get("userWorkCycles").toString()));
          }

          // validate the optional field `userWorkCycles` (array)
          for (int i = 0; i < jsonArrayuserWorkCycles.size(); i++) {
            UsersUpdateByIdRequestUserWorkCyclesInner.validateJsonObject(jsonArrayuserWorkCycles.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("habilitedRoles") != null && !jsonObj.get("habilitedRoles").isJsonNull()) {
        JsonArray jsonArrayhabilitedRoles = jsonObj.getAsJsonArray("habilitedRoles");
        if (jsonArrayhabilitedRoles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("habilitedRoles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `habilitedRoles` to be an array in the JSON string but got `%s`", jsonObj.get("habilitedRoles").toString()));
          }

          // validate the optional field `habilitedRoles` (array)
          for (int i = 0; i < jsonArrayhabilitedRoles.size(); i++) {
            UsersUpdateByIdRequestHabilitedRolesInner.validateJsonObject(jsonArrayhabilitedRoles.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) && !jsonObj.get("address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address").toString()));
      }
      if ((jsonObj.get("bankName") != null && !jsonObj.get("bankName").isJsonNull()) && !jsonObj.get("bankName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bankName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bankName").toString()));
      }
      if ((jsonObj.get("directLine") != null && !jsonObj.get("directLine").isJsonNull()) && !jsonObj.get("directLine").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `directLine` to be a primitive type in the JSON string but got `%s`", jsonObj.get("directLine").toString()));
      }
      if ((jsonObj.get("jobTitle") != null && !jsonObj.get("jobTitle").isJsonNull()) && !jsonObj.get("jobTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobTitle").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("nationality") != null && !jsonObj.get("nationality").isJsonNull()) && !jsonObj.get("nationality").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nationality` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nationality").toString()));
      }
      if ((jsonObj.get("personalEmail") != null && !jsonObj.get("personalEmail").isJsonNull()) && !jsonObj.get("personalEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personalEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personalEmail").toString()));
      }
      if ((jsonObj.get("personalMobile") != null && !jsonObj.get("personalMobile").isJsonNull()) && !jsonObj.get("personalMobile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personalMobile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personalMobile").toString()));
      }
      if ((jsonObj.get("professionalMobile") != null && !jsonObj.get("professionalMobile").isJsonNull()) && !jsonObj.get("professionalMobile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `professionalMobile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("professionalMobile").toString()));
      }
      if ((jsonObj.get("quote") != null && !jsonObj.get("quote").isJsonNull()) && !jsonObj.get("quote").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `quote` to be a primitive type in the JSON string but got `%s`", jsonObj.get("quote").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UsersCreateNewUserResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UsersCreateNewUserResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UsersCreateNewUserResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UsersCreateNewUserResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<UsersCreateNewUserResponse>() {
           @Override
           public void write(JsonWriter out, UsersCreateNewUserResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public UsersCreateNewUserResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             UsersCreateNewUserResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UsersCreateNewUserResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UsersCreateNewUserResponse
  * @throws IOException if the JSON string is invalid with respect to UsersCreateNewUserResponse
  */
  public static UsersCreateNewUserResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UsersCreateNewUserResponse.class);
  }

 /**
  * Convert an instance of UsersCreateNewUserResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

